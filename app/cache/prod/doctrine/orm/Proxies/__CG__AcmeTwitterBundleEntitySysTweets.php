<?php

namespace Proxies\__CG__\Acme\TwitterBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class SysTweets extends \Acme\TwitterBundle\Entity\SysTweets implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'head', 'content', 'isOnline', 'addTime', 'totalPublish', 'creator', 'image', 'extraInfo', 'eId');
        }

        return array('__isInitialized__', 'head', 'content', 'isOnline', 'addTime', 'totalPublish', 'creator', 'image', 'extraInfo', 'eId');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (SysTweets $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setHead($head)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHead', array($head));

        return parent::setHead($head);
    }

    /**
     * {@inheritDoc}
     */
    public function getHead()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHead', array());

        return parent::getHead();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent($content)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', array($content));

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', array());

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsOnline($isOnline)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsOnline', array($isOnline));

        return parent::setIsOnline($isOnline);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsOnline()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsOnline', array());

        return parent::getIsOnline();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddTime($addTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddTime', array($addTime));

        return parent::setAddTime($addTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddTime', array());

        return parent::getAddTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalPublish($totalPublish)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalPublish', array($totalPublish));

        return parent::setTotalPublish($totalPublish);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalPublish()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalPublish', array());

        return parent::getTotalPublish();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreator($creator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreator', array($creator));

        return parent::setCreator($creator);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreator', array());

        return parent::getCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', array($image));

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', array());

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setExtraInfo($extraInfo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtraInfo', array($extraInfo));

        return parent::setExtraInfo($extraInfo);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtraInfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtraInfo', array());

        return parent::getExtraInfo();
    }

    /**
     * {@inheritDoc}
     */
    public function getEId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getEId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEId', array());

        return parent::getEId();
    }

}
